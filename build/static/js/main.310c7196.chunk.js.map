{"version":3,"sources":["init/constants.ts","Pages/Main/reducer.ts","Pages/Auth/reducer.ts","init/reducer.ts","init/store.ts","init/hooks.ts","init/unsplashAPI.ts","Pages/Main/actions.ts","modules/LikeButton/index.tsx","Pages/Main/List/index.tsx","Pages/Main/List/LoadButton/index.tsx","Pages/Main/index.tsx","Pages/Auth/actions.ts","Pages/Details/index.tsx","Pages/Auth/index.tsx","Pages/Auth/RedirectPage/index.tsx","App.tsx","index.tsx"],"names":["isLocal","initState","list","page","isLoading","requestFailed","status","errorMessage","updateLikes","state","key","photo","newList","loadList","data","setErrorMessage","message","toggleIsLoading","reducer","action","type","isLoggedIn","Cookies","get","checkAuth","combineReducers","login","photoList","store","createStore","composeWithDevTools","applyMiddleware","thunk","useIsLoggedIn","useSelector","IS_LOCAL","window","location","hostname","unsplash","Unsplash","accessKey","secret","callbackUrl","bearerToken","authenticationUrl","auth","getAuthenticationUrl","errorHandler","code","likePhoto","id","photos","unlikePhoto","isLiked","then","res","ok","toJson","catch","err","failed","json","loadData","i","dispatch","a","perPage","orderBy","listPhotos","likePhotoList","LikeButton","el","useDispatch","likes","liked_by_user","onClick","List","props","bind","this","map","className","to","src","urls","thumb","alt","alt_description","React","Component","LoadButton","Main","l","query","URLSearchParams","search","hash","replace","remove","Details","useParams","Auth","RedirectPage","url","protocol","port","pathname","userAuthentication","alert","accessToken","access_token","set","App","basename","exact","path","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.310c7196.chunk.js","sourcesContent":["export const ACCESS_KEY = \"ANOEv2G8HQvmAGeNpKS1ERxGz7-1G5f91mH8sNyo4nk\";\r\nexport const SECRET_KEY = \"t42Xnafrq9i6jjvGmCt82qTAJ1PLW2DXQ74FOUElgAg\";\r\n\r\nexport const setRedirectUrl = (isLocal: boolean) => isLocal\r\n    ? \"http://superclaw.ddns.net:3000/phoiewer/build/redirect\"\r\n    : \"https://superclaw.github.io/phoiewer/build/redirect\";\r\n","import { TPhotoListState } from \"./types\";\r\nimport { TActionReturns, TReducerFunc } from \"../../init/types\";\r\n\r\nconst initState: TPhotoListState = {\r\n  list: [],\r\n  page: 0,\r\n  isLoading: false,\r\n  requestFailed: {\r\n    status: false,\r\n    errorMessage: '',\r\n  },\r\n};\r\n\r\nconst updateLikes: TReducerFunc<TPhotoListState> = (state, { photo }, key) => {\r\n  const newList = [ ...state.list ];\r\n  newList[key] = photo;\r\n\r\n  return {\r\n    ...state,\r\n    list: newList,\r\n  };\r\n}\r\n\r\nconst loadList: TReducerFunc<TPhotoListState> = (state, data) => {\r\n  let {list, page} = state;\r\n  page++;\r\n\r\n  return {\r\n    ...state,\r\n    page: page,\r\n    list: [\r\n        ...list,\r\n        ...data,\r\n    ],\r\n    isLoading: false,\r\n    requestFailed: {\r\n      ...state.requestFailed,\r\n      status: false,\r\n    },\r\n  };\r\n};\r\n\r\nconst setErrorMessage: TReducerFunc<TPhotoListState> = (state, message) => ({\r\n  ...state,\r\n  isLoading: false,\r\n  requestFailed: {\r\n    ...state.requestFailed,\r\n    status: true,\r\n    errorMessage: message,\r\n  },\r\n});\r\n\r\nconst toggleIsLoading: TReducerFunc<TPhotoListState> = (state) => {\r\n  return {\r\n    ...state,\r\n    isLoading: true,\r\n    requestFailed: {\r\n      ...state.requestFailed,\r\n      status: false,\r\n    },\r\n  };\r\n};\r\n\r\nconst reducer = (state = initState, action: TActionReturns): TPhotoListState => {\r\n  switch (action.type) {\r\n    case 'LIKE_PHOTO': return updateLikes(state, action.data, action.key);\r\n    case 'LOAD_NEXT': return loadList(state, action.data);\r\n    case 'IS_LOADING': return toggleIsLoading(state);\r\n    case 'REQUEST_FAILED': return setErrorMessage(state, action.message);\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import Cookies from \"js-cookie\";\r\nimport { TAuthState } from \"./types\";\r\nimport { TActionReturns, TReducerFunc } from \"../../init/types\";\r\n\r\nconst initState: TAuthState = {\r\n  isLoggedIn: !!Cookies.get('unsplash_access_token'),\r\n};\r\n\r\nconst checkAuth: TReducerFunc<TAuthState> = (state) => ({\r\n  ...state,\r\n  isLoggedIn: !!Cookies.get('unsplash_access_token'),\r\n});\r\n\r\nconst reducer = (state = initState, action: TActionReturns): TAuthState => {\r\n  switch (action.type) {\r\n    case 'CHECK_AUTH': return checkAuth(state);\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport reducer from \"../Pages/Main/reducer\";\r\nimport login from \"../Pages/Auth/reducer\";\r\n\r\nexport default combineReducers({\r\n  login,\r\n  photoList: reducer,\r\n});\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension/index\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./reducer\";\r\n\r\nexport const store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n","import { useSelector } from \"react-redux\";\r\nimport { TState } from \"./types\";\r\nimport { TAuthState } from \"../Pages/Auth/types\";\r\n\r\nexport const useIsLoggedIn = () => useSelector(({ login }: TState<TAuthState>) => login.isLoggedIn);\r\n","import Unsplash, { UnsplashApi } from \"unsplash-js\";\r\nimport { toJson } from \"unsplash-js\";\r\nimport Cookies from \"js-cookie\";\r\nimport { ACCESS_KEY, SECRET_KEY, setRedirectUrl } from \"./constants\";\r\nimport { TLikeResponse, TPhotosCollection } from \"./types\";\r\n\r\nconst IS_LOCAL: boolean = window.location.hostname !== 'superclaw.github.io';\r\n\r\nexport const unsplash = new Unsplash({\r\n  accessKey: ACCESS_KEY,\r\n  secret: SECRET_KEY,\r\n  callbackUrl: setRedirectUrl(IS_LOCAL),\r\n  bearerToken: Cookies.get('unsplash_access_token'),\r\n});\r\n\r\nexport const authenticationUrl: string = unsplash.auth.getAuthenticationUrl([\r\n  \"public\",\r\n  \"read_user\",\r\n  \"write_user\",\r\n  \"read_photos\",\r\n  \"write_photos\",\r\n  \"write_likes\",\r\n]);\r\n\r\nexport const errorHandler = (code: number): string => {\r\n  switch (code) {\r\n    case 400:\r\n      return 'Код авторизации недействителен';\r\n    case 401:\r\n      return 'Вы не авторизованы или срок действия авторизации истёк';\r\n    case 403:\r\n      return 'Превышен лимит запросов на сервер';\r\n    case 404:\r\n      return 'Данные не получены';\r\n    default:\r\n      return `Неизвестная ошибка, код: ${code}`;\r\n  }\r\n};\r\n\r\nexport const listPhotos: UnsplashApi.Photo['listPhotos'] =\r\n  (page, perPage, orderBy) =>\r\n\r\n    unsplash.photos.listPhotos(page, perPage, orderBy).then(res => {\r\n\r\n      if (!res.ok) return {\r\n        failed: true,\r\n        message: errorHandler(res.status),\r\n      }\r\n\r\n      return toJson(res).catch((err: string) => ({\r\n        failed: true,\r\n        message: err,\r\n      })).then((json: TPhotosCollection) => json);\r\n    });\r\n\r\nconst likePhoto: UnsplashApi.Photo['likePhoto'] = (id) => unsplash.photos.likePhoto(id);\r\nconst unlikePhoto: UnsplashApi.Photo['unlikePhoto'] = (id) => unsplash.photos.unlikePhoto(id);\r\n\r\nexport const updateLikes = (id: string, isLiked: boolean) => {\r\n  const action = isLiked ? unlikePhoto : likePhoto;\r\n\r\n  return action(id).then(res => {\r\n    if (!res.ok) return {\r\n      failed: true,\r\n      message: errorHandler(res.status),\r\n    }\r\n\r\n    return toJson(res).catch((err: string) => ({\r\n      failed: true,\r\n      message: err,\r\n    })).then((json: TLikeResponse) => json);\r\n  });\r\n};\r\n","import { listPhotos, updateLikes } from \"../../init/unsplashAPI\";\r\nimport { TAsyncAction, TData } from \"../../init/types\";\r\n\r\nexport const loadData: TAsyncAction = (i: number) =>\r\n  async function (dispatch) {\r\n\r\n    dispatch({\r\n      type: 'IS_LOADING',\r\n    });\r\n\r\n    const data: TData = await listPhotos(++i, 15, \"latest\");\r\n\r\n    if (data.failed) {\r\n      dispatch({\r\n        type: 'REQUEST_FAILED',\r\n        message: data.message,\r\n      });\r\n\r\n    } else {\r\n      dispatch({\r\n        type: 'LOAD_NEXT',\r\n        data: data,\r\n      });\r\n    }\r\n};\r\n\r\nexport const likePhotoList: TAsyncAction = (id: string, isLiked: boolean, key: number) =>\r\n  async function (dispatch) {\r\n\r\n    const data: TData = await updateLikes(id, isLiked);\r\n\r\n    if (data.failed) {\r\n      dispatch({\r\n        type: 'REQUEST_FAILED',\r\n        message: data.message,\r\n      });\r\n\r\n    } else {\r\n      dispatch({\r\n        type: 'LIKE_PHOTO',\r\n        data: data,\r\n        key: key,\r\n      });\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { TLikeBtnProps} from \"./types\";\r\n\r\nconst LikeButton = ({ i = 0, el, action }: TLikeBtnProps) => {\r\n  const dispatch = useDispatch();\r\n  const { id, likes, liked_by_user } = el;\r\n\r\n  return (\r\n      <div>\r\n        <button onClick={() => dispatch(action(id, liked_by_user, i))}/>\r\n        <span>{likes}</span>\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default LikeButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { loadData, likePhotoList } from \"../actions\";\r\nimport { Dispatch } from \"redux\";\r\nimport { TPhotoListProps } from \"../types\";\r\n\r\nimport LikeButton from \"../../../modules/LikeButton\";\r\n\r\nclass List extends React.Component<TPhotoListProps> {\r\n  private readonly dispatch: Dispatch<any>;\r\n\r\n  constructor(props: TPhotoListProps) {\r\n    super(props);\r\n    this.dispatch = props.dispatch.bind(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    if (!this.props.page) this.dispatch(loadData(0));\r\n  }\r\n\r\n  public render() {\r\n    return this.props.requestFailed.status ? <p>Ошибка загрузки: {this.props.requestFailed.errorMessage}</p> : (\r\n        <ul>\r\n          {\r\n            this.props.list.map((el, i) =>\r\n                (\r\n                    <li key={i} className=\"item\">\r\n                      <Link to={`/photo-${el.id}`}>\r\n                        <img className=\"img\" src={el.urls.thumb} alt={el.alt_description}/>\r\n                      </Link>\r\n                      <LikeButton\r\n                        i={i}\r\n                        el={el}\r\n                        action={likePhotoList} />\r\n                    </li>\r\n                )\r\n            )\r\n          }\r\n        </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport { loadData } from \"../../actions\";\r\nimport { TLoadBtnProps } from \"../../types\";\r\n\r\nconst LoadButton = ({ isLoading, page, dispatch }: TLoadBtnProps) => isLoading ? (\r\n    <div className=\"loading-icon\">\r\n      Загрузка...\r\n    </div>\r\n) : (\r\n    <button\r\n        className=\"load-next\"\r\n        onClick={() => {\r\n          dispatch(loadData(page));\r\n        }}>\r\n      Загрузить ещё...\r\n    </button>\r\n);\r\n\r\nexport default LoadButton;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useIsLoggedIn } from \"../../init/hooks\";\r\nimport { logOut } from \"../Auth/actions\";\r\n\r\nimport List from \"./List\";\r\nimport LoadButton from \"./List/LoadButton\";\r\nimport { TPhotoListState } from \"./types\";\r\nimport { TState } from \"../../init/types\";\r\n\r\nconst Main = () => {\r\n  const l = window.location;\r\n  const query = new URLSearchParams(l.search).get('redirect_to');\r\n  const hash = l.hash;\r\n\r\n  const dispatch = useDispatch();\r\n  const isLoggedIn = useIsLoggedIn();\r\n  const photoList = useSelector(({ photoList }: TState<TPhotoListState>) => photoList);\r\n  const { page, isLoading, requestFailed, list } = photoList;\r\n\r\n  return query ? <Redirect to={query.replace(/~and~/g, '&') + hash} /> : !isLoggedIn ? <Redirect to=\"/auth\" /> : (\r\n      <div className=\"wrapper\">\r\n        <button onClick={() => dispatch(logOut())}>\r\n          Выйти\r\n        </button>\r\n        <List\r\n            list={list}\r\n            requestFailed={requestFailed}\r\n            page={page}\r\n            dispatch={dispatch} />\r\n        <LoadButton\r\n            isLoading={isLoading}\r\n            page={page}\r\n            dispatch={dispatch} />\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import Cookies from \"js-cookie\";\r\nimport { TAction } from \"../../init/types\";\r\n\r\nexport const logIn: TAction = (accessToken: string) => {\r\n  Cookies.set('unsplash_access_token', accessToken);\r\n\r\n  return {\r\n    type: 'CHECK_AUTH',\r\n  };\r\n};\r\n\r\nexport const logOut: TAction = () => {\r\n  Cookies.remove('unsplash_access_token');\r\n\r\n  return {\r\n    type: 'CHECK_AUTH',\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { TDetailsParams } from \"./types\";\r\n\r\nconst Details = () => {\r\n  const { id } = useParams<TDetailsParams>();\r\n  return <div>{id}</div>\r\n};\r\n\r\nexport default Details;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { authenticationUrl } from \"../../init/unsplashAPI\";\r\nimport { useIsLoggedIn } from \"../../init/hooks\";\r\n\r\nconst Auth = () => useIsLoggedIn() ? <Redirect to=\"/\" /> : (\r\n    <div>\r\n      <p>\r\n        Для просмотра этой страницы необходимо авторизоваться.\r\n      </p>\r\n      <button onClick={() => window.location.replace(authenticationUrl)}>\r\n        Войти\r\n      </button>\r\n    </div>\r\n);\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport { unsplash, errorHandler } from \"../../../init/unsplashAPI\";\r\nimport { toJson } from \"unsplash-js\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logIn } from \"../actions\";\r\nimport { TAccessToken } from \"../types\";\r\n\r\nconst RedirectPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const l = window.location;\r\n  const url = l.protocol + '//' + l.hostname + (l.port ? ':' + l.port : '') + l.pathname.replace('/redirect', '/');\r\n  const code = new URLSearchParams(l.search).get('code');\r\n\r\n  if (!code) return <Redirect to=\"/\" />;\r\n\r\n  unsplash.auth.userAuthentication(code).then(res => {\r\n    if (!res.ok) {\r\n      alert(`Ошибка: ${errorHandler(res.status)}`);\r\n      l.replace(url);\r\n    }\r\n\r\n    return toJson(res).catch((err: string) => {\r\n      alert(`Ошибка: ${err}`);\r\n      l.replace(url);\r\n    }).then((json: TAccessToken) => {\r\n      if (json.access_token) dispatch(logIn(json.access_token));\r\n      l.replace(url);\r\n    });\r\n  });\r\n\r\n  return <div>Идёт авторизация...</div>;\r\n};\r\n\r\nexport default RedirectPage;\r\n","import \"./index.css\";\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Main from \"./Pages/Main\";\r\nimport Details from \"./Pages/Details\";\r\nimport Auth from \"./Pages/Auth\";\r\nimport RedirectPage from \"./Pages/Auth/RedirectPage\";\r\n\r\nconst App = () => (\r\n    <Router basename=\"/phoiewer/build/\">\r\n      <Switch>\r\n        <Route exact path=\"/photo-:id\">\r\n          <Details />\r\n        </Route>\r\n        <Route exact path=\"/auth\">\r\n          <Auth />\r\n        </Route>\r\n        <Route exact path=\"/redirect\">\r\n          <RedirectPage />\r\n        </Route>\r\n        <Route exact path=\"/\">\r\n          <Main />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./init/store\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}